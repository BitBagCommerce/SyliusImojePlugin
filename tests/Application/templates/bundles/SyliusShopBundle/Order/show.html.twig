{% extends '@SyliusShop/layout.html.twig' %}

{% import '@SyliusUi/Macro/messages.html.twig' as messages %}

{% form_theme form '@SyliusShop/Form/theme.html.twig' %}

{% block title %}{{ 'sylius.ui.summary_of_your_order'|trans }} | {{ parent() }}{% endblock %}

{% block content %}
    <div class="ui segment">
        {% include '@SyliusShop/Order/_summary.html.twig' %}

        {% if order.paymentState in ['awaiting_payment'] %}
            {{ form_start(form, {'action': path('sylius_shop_order_show', {'tokenValue': order.tokenValue}), 'attr': {'class': 'ui loadable form', 'novalidate': 'novalidate', 'id': 'theForm'}}) }}
            <input type="hidden" name="_method" value="PUT" />
            <input type="hidden" data-bb-is-payment-method="{{ order.payments.last.details | join('|') }}"/>
            <input type="hidden" data-bb-is-ing-method="{{ order.payments.last.details | keys | join('|') }}"/>
            <input type="hidden" data-bb-order-id="{{ order.id }}"/>
            <input type="hidden" data-bb-path-inicialize="{{ path('bitbag_ing_initialize_payment') }}"/>
            {% include '@SyliusShop/Checkout/SelectPayment/_form.html.twig' %}
            <div class="ui hidden divider"></div>
            <button type="submit" class="ui large blue icon labeled button data-bb-is-payment-button" id="sylius-pay-link" {{ sylius_test_html_attribute('pay-link') }}>
                <i class="check icon"></i> {{ 'sylius.ui.pay'|trans }}
            </button>

            {{ form_row(form._token) }}
            {{ form_end(form, {'render_rest': false}) }}
        {% else %}
            {{ messages.info('sylius.ui.you_can_no_longer_change_payment_method_of_this_order') }}
        {% endif %}
    </div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script>
        async function performAction(isAfterPayment = false) {
            let paymentMethod = '';

            if (isAfterPayment === false) {
                let paymentMethod = document.querySelector('[data-bb-is-payment-method]').dataset.bbIsPaymentMethod;
                const isIng = document.querySelector('[data-bb-is-ing-method]').dataset.bbIsIngMethod;
            }

            if ('card' === paymentMethod && 'ingPaymentMethods' === isIng || isAfterPayment) {
                console.log("isIng")
                const orderId = document.querySelector('[data-bb-order-id]').dataset.bbOrderId;
                const url = `/payment/oneclick/${orderId}`;
                try {
                    const response = await fetch(url);
                    const data = await response.json();
                    console.log(data);

                    const script = document.createElement('script');
                    script.src = "https://sandbox.paywall.imoje.pl/js/widget.min.js";
                    script.id = "imoje-widget__script";

                    script.dataset.merchantId = data.merchantId;
                    script.dataset.serviceId = data.serviceId;
                    script.dataset.amount = data.amount;
                    script.dataset.currency = data.currency;
                    script.dataset.orderId = data.orderId;
                    script.dataset.customerId = data.customerId;
                    script.dataset.customerFirstName = data.customerFirstName;
                    script.dataset.customerLastName = data.customerLastName;
                    script.dataset.customerEmail = data.customerEmail;
                    script.dataset.urlSuccess = data.urlSuccess;
                    script.dataset.urlFailure = data.urlFailure;
                    script.dataset.signature = data.signature;
                    document.querySelector('head').appendChild(script);

                } catch (error) {
                    console.error(error);
                } finally {
                }
            }
        }

        const widgetIng = document.querySelector('.js-widget-ing-action');

        const turnOnListener = () => {

            if (widgetIng)
            {
                widgetIng.addEventListener('click', e => {
                    e.preventDefault();
                    this.performAction();
                });
            }
        };

        turnOnListener();
    </script>
{% endblock %}

